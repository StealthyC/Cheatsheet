OWASP Mobile Top 10
-------------------------
1. Server Side Control
------------------------------
http method enumeration with netcat 
#nc $ip 80
OPTIONS / HTTP/1.1
nmap
#nmap --script http-methods --script-args http.url-path='/' $ip
#injection XXE

2. Insecure Data Storage
----------------------
#Cache files
-find in app folder and cache folder, most application store cache file under Library folder
-snapshots are under Library/Caches/Snapshots
-copy the png file to PC and check
-png file are the screenshot of the application 

#Cookies
- in app folder any cookies name .binarycookies extention 

#Key Chain
-download and install keychain dumper from https://github.com/ptoomey3/Keychain-Dumper in phone
-give permission to keychain_dumper with chmod +x and copy to /usr/sbin/ 
-run command keychain_dumper with the parameter -a to get all keychain of all application.

#Property list file
-Login with ssh the root password "alpine"
-find the .plist files of the agd application under application folder 
-copy .plist files to /tmp
-use plutil tool to decrypt .plist and check any username of password store
-copy .plist file to PC and check with plist manager

#SQLite
-Login with ssh the root password "alpine"
-in application install folder check database file with the application name extension of .sqlite or .db . 
-use sqlite3 command along with the database name and check table.
-copy database to PC and check with Sqllite manager

3.Insufficient Transport Layer Protection
---------------------------
#check certificate validation
-install burpsuite profile
-check to application and login
-confirm application check the certificate or not
-if check certificate is not trusted message will appear

#check certificate
-remove burpsuite profile 
-make sure certificate is not trusted when visited to google or some url
-check again to agdmobile application and login 
-check valid or not

#check ssl enumearation with nmap
nmap --script ssl-cert,ssl-enu-cipher -p 443,465,993,995 $ip

#intercept the request and check whether it use http or https

4. Unintended data Leakage
----------------------

##console log from xcode (MAC)
- in xcode click on Window in the menu bar and click on Organizer
-in the window that opens up , click on Devices
-select your device and click on Console

#socat
-install socat with apt-get install socat
-start socat - UNIX-CONNECT:/var/run/lockdown/syslog.sock
-in interective shell execute watch command to watch all log 

5.Poor Authorization and Authentication
-----------------------------
#login and logout then do back 
#check application is logined or not

#test default usernames and password
 "admin", "administrator", "root", "system", "guest", "operator", or "super".

# If the application is vulnerable to username enumeration, and you manage to successfully identify any of the above username

#test weak security question
#pre-generated question
-The answers may be known to family members or close friends of the user
 "What is your mother's maiden name?"
-The answers may be easily guessable
 "What is your favorite color?"
- The answers may be brute forcible
"What is the first name of your favorite high school teacher?"
-The answers may be publicly discoverable
"What is your favorite movie?" 

#self-generate question
-test can create self-generate question or not
-if can it vul to insecure questions create

#What characters are permitted and forbidden for use within a password?
#How often can a user change their password
#How different must the next password be from the last password
# Is the user prevented from using his username or other account information

6. Broken Cryptography
---------------------------
#capture with Tcpdump
-install tcpdump, ifconfig
-capture the network traffic with tcpdump 
"tcpdump -i interface -W filecount port 80 -w outputfile.pcap"

#determine key management processs
#check use of insecure or deprecated algorithms
#check database file with sqlite3 encrypted or not

7. Inproper Session Handling

#cookie collection
-how many cookies are used
-which parts of app genetate cookies

#session analysis
-examine token structure

#cookie reveres engineering
-unpredictability
-tamper resistance
-expiration
-secure flag

#session fixation
-check authenticates a user without first invalidating
-the existing session ID

#csrf
-make password reset request and analyse the url, parameter
-create fake request link and open by another user

8. Lack of Binary Protection
-------------------------------------
#Reverse Engineer Code
-code are located in /var/mobile/Application/$uiqueId/$appname.app/
-check the application name like AGD is encrypt or not
-check the code can be reverse enginnering or can be crack with the tools clutch or gdb
